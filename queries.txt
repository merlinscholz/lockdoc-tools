-- Just check if the is consistent
SELECT *
FROM locks_held AS lh
LEFT JOIN accesses AS as ON as.id=lh.access_id
LEFT JOIN allocations AS a ON a.id=as.alloc_id
LEFT JOIN locks AS l ON l.id=lh.lock_id
LEFT JOIN data_types AS dt ON dt.id=a.type
WHERE as.id IS NULL OR a.id IS NULL OR l.id IS NULL OR dt.id IS NULL;

-- Generates the same output as generate-lock-symbols.php
SELECT ac.id AS ac_id, ac.alloc_id,ac.type,a.type AS datatype,
	   GROUP_CONCAT(lh.lock_id SEPARATOR '+') AS locks, GROUP_CONCAT(l.type SEPARATOR '+') AS lock_types,
	   GROUP_CONCAT(l.embedded_in SEPARATOR '+') AS embedded_in, ac.address - a.ptr AS offset, ac.size
FROM accesses AS ac
INNER JOIN allocations AS a ON a.id=ac.alloc_id
INNER JOIN locks_held AS lh ON lh.access_id=ac.id
INNER JOIN locks AS l ON l.id=lh.lock_id
GROUP BY ac.id
-- LIMIT 0,10

-- Is used as input for generate-lock-symbols.php
SELECT ac.alloc_id,ac.type,a.type AS datatype, lh.lock_id AS locks, l.type AS locktypes, l.embedded_in AS embedded_in, ac.address - a.ptr AS offset, ac.size
FROM accesses AS ac
INNER JOIN allocations AS a ON a.id=ac.alloc_id
INNER JOIN locks_held AS lh ON lh.access_id=ac.id
INNER JOIN locks AS l ON l.id=lh.lock_id
ORDER BY ac.id
-- LIMIT 0,10

-- Get a distribution of locks held during a memory access for a certain type or instance
SELECT ls.alloc_id,ac.ts,dt.name,a.ptr,ls.type,locks,offset, count(lock_types) as num
FROM lock_symbols As ls
INNER JOIN allocations AS a ON a.id=ls.alloc_id
INNER JOIN accesses AS ac ON ac.id=ls.ac_id
INNER JOIN data_types AS dt ON dt.id=a.type
-- WHERE a.type=X
WHERE a.ptr=Y
-- GROUP BY alloc_id,locks
 GROUP BY alloc_id,locks,type
-- GROUP BY alloc_id,locks,type,offset
ORDER BY num DESC, offset ASC
-- LIMIT 0,10;
